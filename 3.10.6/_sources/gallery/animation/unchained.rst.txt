
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "gallery/animation/unchained.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_gallery_animation_unchained.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gallery_animation_unchained.py:


====================
Matplotlib unchained
====================

Comparative path demonstration of frequency from a fake signal of a pulsar
(mostly known because of the cover for Joy Division's Unknown Pleasures).

Author: Nicolas P. Rougier

Output generated via `matplotlib.animation.Animation.to_jshtml`.

.. GENERATED FROM PYTHON SOURCE LINES 13-77



.. video:: /gallery/animation/images/sphx_glr_unchained_001.mp4
   :class: sphx-glr-single-img
   :height: 800
   :width: 800
   :autoplay:
   :loop:






.. code-block:: Python


    import matplotlib.pyplot as plt
    import numpy as np

    import matplotlib.animation as animation

    # Fixing random state for reproducibility
    np.random.seed(19680801)


    # Create new Figure with black background
    fig = plt.figure(figsize=(8, 8), facecolor='black')

    # Add a subplot with no frame
    ax = plt.subplot(frameon=False)

    # Generate random data
    data = np.random.uniform(0, 1, (64, 75))
    X = np.linspace(-1, 1, data.shape[-1])
    G = 1.5 * np.exp(-4 * X ** 2)

    # Generate line plots
    lines = []
    for i in range(len(data)):
        # Small reduction of the X extents to get a cheap perspective effect
        xscale = 1 - i / 200.
        # Same for linewidth (thicker strokes on bottom)
        lw = 1.5 - i / 100.0
        line, = ax.plot(xscale * X, i + G * data[i], color="w", lw=lw)
        lines.append(line)

    # Set y limit (or first line is cropped because of thickness)
    ax.set_ylim(-1, 70)

    # No ticks
    ax.set_xticks([])
    ax.set_yticks([])

    # 2 part titles to get different font weights
    ax.text(0.5, 1.0, "MATPLOTLIB ", transform=ax.transAxes,
            ha="right", va="bottom", color="w",
            family="sans-serif", fontweight="light", fontsize=16)
    ax.text(0.5, 1.0, "UNCHAINED", transform=ax.transAxes,
            ha="left", va="bottom", color="w",
            family="sans-serif", fontweight="bold", fontsize=16)


    def update(*args):
        # Shift all data to the right
        data[:, 1:] = data[:, :-1]

        # Fill-in new values
        data[:, 0] = np.random.uniform(0, 1, len(data))

        # Update data
        for i in range(len(data)):
            lines[i].set_ydata(i + G * data[i])

        # Return modified artists
        return lines

    # Construct the animation, using the update function as the animation director.
    anim = animation.FuncAnimation(fig, update, interval=10, save_count=100)
    plt.show()


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 15.292 seconds)


.. _sphx_glr_download_gallery_animation_unchained.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: unchained.ipynb <unchained.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: unchained.py <unchained.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: unchained.zip <unchained.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
